setwd("~/RepData_PeerAssessment1")
?unzip
test <- read.csv(unz("activity.zip",activity.csv))
test <- read.csv(unz("activity.zip","activity.csv"))
head(test)
tail(test)
str(test)
summary(test)
mean(is.na(test$steps))
range(test$date)
range(as.date(test$date)
)
range(as.Date(test$date))
hist(test)
hist(test$steps)
hist(mean(test$steps))
library(dplyr)
test2 <- group_by(test, date) %>% summarise(mean(steps))
test2
hist(test2)
hist(test2$`mean(steps)`)
?hist
unique(test2$date)
qplot(test2)
library(ggplot2)
qplot(test2)
?hist
head(test2)
hist(test2$`mean(steps)`)
source("script.r")
View(dataset)
View(stepsDayTotal)
plot(stepsDayTotal)
hist(stepsDayTotal)
hist(stepsDayTotal$total.steps)
head(stepsDayTotal)
source("script.r")
source("script.r")
source("script.r")
View(stepsDayTotal)
source("script.r")
source("script.r")
head(stepsDayTotal)
source("script.r")
?media
?median
class(dataset$steps)
source("script.r")
head(stepsDayTotal)
source("script.r")
source("script.r")
source("script.r")
source("script.r")
source("script.r")
test <- subset(dataset[date == "2012-10-16"])
test <- subset(dataset[1 == "2012-10-16",])
test <- subset(dataset[1 == 2012-10-16,])
View(dataset)
test <- subset(dataset[2 == 2012-10-16,])
test <- subset(dataset[2 == "2012-10-16",])
test <- subset(dataset[,2 == 2012-10-16])
test <- subset(dataset[,"date" == 2012-10-16])
test <- subset(dataset, dataset$date == 2012-10-01)
test <- subset(dataset, dataset$date == "2012-10-01")
median(test$steps)
test <- subset(dataset, dataset$date == "2012-10-03")
median(test$steps)
summary(test)
source("scipt.r")
source("script.r")
source("script.r")
hist(stepsDayTotal)
hist(stepsDayTotal$sum, breaks = as.factor(stepsDayTotal$date))
hist(stepsDayTotal$sum, breaks = as.numeric(stepsDayTotal$date))
hist(stepsDayTotal$sum, breaks = as.numeric(stepsDayTotal$date) + 1)
qplot(test)
qplot(stepsDayTotal$sum ~ stepsDayTotal$date)
qplot(stepsDayTotal)
qplot(stepsDayTotal[,1:2])
source("script.r")
source("script.r")
source("script.r")
source("script.r")
summary(stepsDayTotal)
print(stepsDayTotal)
source("script.r")
class(dataset$date)
dataset$date <- as.Date(dataset$date, "%Y%m%d")
class(dataset$date)
class(stepsDayTotal$date)
unlink('PA1_template_cache', recursive = TRUE)
stepsDayTotal <- group_by(dataset, date) %>% summarise( sum = sum(steps), mean = mean(steps, na.rm = TRUE), median = median(steps))
print(stepsDayTotal)
stepsDayTotal <- group_by(dataset, as.character(date) %>% summarise( sum = sum(steps), mean = mean(steps, na.rm = TRUE), median = median(steps))
)
stepsDayTotal <- group_by(dataset, as.character(date)) %>% summarise( sum = sum(steps), mean = mean(steps, na.rm = TRUE), median = median(steps)
)
stepsDaySummary <- data.frame(Date = unique(dataset$Date),
sum = tapply(dataset$steps, dataset$Date, FUN = sum),
mean = tapply(dataset$steps, dataset$Date, FUN = mean),
median = tapply(dataset$steps, dataset$Date, FUN = median))
stepsDaySummary <- data.frame(Date = unique(dataset$date),
sum = tapply(dataset$steps, dataset$Date, FUN = sum),
mean = tapply(dataset$steps, dataset$Date, FUN = mean),
median = tapply(dataset$steps, dataset$Date, FUN = median))
library(dplyr)
options(dplyr.print_max = 100)
dataset <- read.csv(unz("activity.zip","activity.csv"))
stepsDayTotal <- group_by(dataset, date) %>% summarise( sum = sum(steps))
mean(stepsDayTotal$sum, na.rm = TRUE)
median(stepsDayTotal$sum, na.rm = TRUE)
View(stepsDayTotal)
View(dataset)
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps))
View(stepsDayTotal)
View(stepsByinterval)
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps, na.rm = TRUE))
View(stepsByinterval)
names(stepsByinterval) <- c("interval","sum")
plot(stepsByinterval$interval ~ stepsByinterval$sum)
View(stepsByinterval)
plot(stepsByinterval$sum ~ stepsByinterval$interval)
stepsByinterval[which.max(stepsByinterval$sum),]
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps, na.rm = TRUE))
names(stepsByinterval) <- c("interval","sum")
plot(stepsByinterval$sum ~ stepsByinterval$interval, type = "l")
stepsByinterval[which.max(stepsByinterval$sum),]
plot(stepsByinterval$sum ~ stepsByinterval$interval, type = "l", color = "red")
?lines
?impute
?imputation
count(is.na(dataset$steps))
test <- is.na(dataset$steps)
test
count(test)
sum(test)
sum(is.na(dataset$steps))
View(stepsByinterval)
View(stepsDayTotal)
View(stepsByinterval)
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE))
names(stepsByinterval) <- c("interval","sum","mean")
View(stepsByinterval)
missingValues <- is.na(dataset$steps)
sum(missingValues)
?is.na
tapply(dataset, dataset[missingValues,],dataset$steps == stepsByinterval$mean[,dataset$interval])
View(stepsDayTotal)
View(stepsByinterval)
mrg <- merge(dataset, stepsByinterval, by.x = interval, by.y = interval)
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
mrg
head(mrg)
tail(mrg)
View(mrg)
mrg$steps[is.na(mrg$steps)] <- mrg$mean[is.na(mrg$steps)]
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
missingValues <- is.na(mrg$steps)
mrg$steps[missingValues] <- mrg$mean[missingValues]
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
mrg$steps[missingValues] <- mrg$mean[[missingValues]]
mrg$steps[[missingValues]] <- mrg$mean[missingValues]
tapply(mrg$steps,mrg$steps, mrg$mean)
tapply(mrg$steps,mrg$steps, mrg$steps = mrg$mean)
?
?tapply
?tapply
for (i in seq_along(mrg$steps))
{}
for (i in seq_along(mrg$steps)){
if (mrg$steps[i] == NA){mrg$steps[i] = mrg$mean[i]
}
)
for (i in seq_along(mrg$steps)){
if (mrg$steps[i] == NA){mrg$steps[i] = mrg$mean[i]}
}
for (i in seq_along(mrg$steps)){
if (is.na(mrg$steps[i]) == TRUE){mrg$steps[i] = mrg$mean[i]}
}
for (i in seq_along(mrg$steps)){
if (is.na(mrg$steps[i]) == TRUE){mrg$steps[i] <- mrg$mean[i]}
}
View(mrg)
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
for (i in seq_along(mrg$steps)){
if (is.na(mrg$steps[i]) == TRUE){mrg$steps[i] <- mrg$mean[i]}
}
for (i in seq_along(mrg$steps)){
if (is.na(mrg$steps[i]) == TRUE){mrg$steps[i] <- mrg$mean[i]}
}
is.na(mrg$steps)
sum(is.na(mrg$steps))
newsummary <- group_by(mrg, date) %>% summarise( sum = sum(steps))
hist(newsummary$sum)
mean(newsummary$sum, na.rm = TRUE)
median(newsummary$sum, na.rm = TRUE)
median(newsummary$sum, na.rm = TRUE)
summary(newsummary$sum)
str(newsummary)
range(newsummary)
range(newsummary$sum)
range(dataset$sum)
range(dataset$sum, na.rm = TRUE)
?isweekday
?isWeekDay
?isWeekday
library(chron)
is.weekday(Sys.Date())
is.weekend(Sys.Date())
dataset <- read.csv(unz("activity.zip","activity.csv"))
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE))
library(chron)
library(dplyr)
stepsByinterval <- group_by(dataset, as.factor(interval)) %>% summarise(sum(steps, na.rm = TRUE), mean = mean(steps, na.rm = TRUE))
names(stepsByinterval) <- c("interval","sum","mean")
mrg <- merge(dataset, stepsByinterval, by.x = "interval", by.y = "interval")
for (i in seq_along(mrg$steps)){
if (is.na(mrg$steps[i]) == TRUE){mrg$steps[i] <- mrg$mean[i]}
}
dataset$date <- as.Date(dataset$date, "%Y%m%d")
x <- is.weekend(dataset$date)
x
class(dataset$date)
?is.weekend
x <- is.weekend(as.character(dataset$date)
)
x
dataset$date[34]
dataset$date <- as.Date(dataset$date, "%Y%m%d")
dataset$date
mrg$date[23]
dataset <- read.csv(unz("activity.zip","activity.csv"))
dataset$date[34]
dataset$date <- as.Date(as.character(dataset$date), "%Y%m%d")
dataset$date[34]
dataset <- read.csv(unz("activity.zip","activity.csv"))
dataset$date <- as.Date(as.character(dataset$date), "%Y-%m-%d")
dataset$date[34]
x <- is.weekend(dataset$date)
head(x)
mrg$isWeekDay <- is.weekend(dataset$date)
View(mrg)
mrg$isWeekDay <- !is.weekend(dataset$date)
qplot(mrg$interval ~ mrg$steps, facets = .~mrg$isWeekDay)
library(ggplot2)
qplot(mrg$interval ~ mrg$steps, facets = .~mrg$isWeekDay)
qplot(interval ~ steps, data = mrg, facets = .~isWeekDay)
qplot(interval ~ steps, data = mrg, facets = isWeekDay~.)
?qplot
qplot(interval, steps, data = mrg, facets = isWeekDay~.)
qplot(interval, steps, data = mrg, facets = isWeekDay~. , geom = "lines")
qplot(interval, steps, data = mrg, facets = isWeekDay~. , geom = "line")
qplot(steps, interval, data = mrg, facets = isWeekDay~. , geom = "line")
qplot(interval, steps, data = mrg, facets = isWeekDay~. , geom = "line")
qplot(interval, steps, data = mrg, facets = isWeekDay~. , geom = "path")
qplot(interval, mean, data = mrg, facets = isWeekDay~. , geom = "path")
qplot(interval, mean, data = mrg, facets = isWeekDay~. , geom = "line")
qplot(interval, mean, data = mrg, facets = isWeekDay~. , geom = "line")
as.numeric(mrg$isWeekDay[2])
mrg$isWeekDay <- as.numeric(!is.weekend(dataset$date))
mrg$isWeekDay <- as.factor(mrg$isWeekDay)
class(mrg$isWeekDay)
levels(mrg$isWeekDay) <- c("Weekday", "Weekend")
is.weekend(mrg$date[12])
mrg$isWeekDay[12]
levels(mrg$isWeekDay) <- c("Weekend", "Weekday")
mrg$isWeekDay <- as.factor(as.numeric(!is.weekend(dataset$date)))
levels(mrg$isWeekDay) <- c("Weekend", "Weekday")
qplot(interval, mean, data = mrg, facets = isWeekDay~. , geom = "line")
